# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
spring:
  profiles:
    active: dev
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  datasource:
    url: ${DATABASE_URL}
    type: com.zaxxer.hikari.HikariDataSource
    username: ${USERNAME-POSTGRES}
    password: ${PASSWORD-POSTGRES}
    hikari:
      pool-name: Hiraki
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: POSTGRESQL
    show-sql: true
server:
  port: ${PORT:8080}
# ===================================================================
# Custom properties
# ===================================================================
app:
  security:
    authentication:
      jwt:
        # Token is valid 6 journals hours
        token-validity-in-seconds: 21600
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        token-secret: nF5M+pcwINsS+DLqZAMHKlrdZvz3S4qRfmp7dZUdWxmmciWgydxYaCqymaLxdoy2hjInYQicaqNffpXjZQxnIw==
    oauth2:
      authorizedRedirectUris:
        # After successfully authenticating with the OAuth2 Provider,
        # we'll be generating an auth token for the user and sending the token to the
        # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
        # We're not using cookies because they won't work well in mobile clients.
        - http://localhost:3000/oauth2/redirect